
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'

	//Querydsl
	//id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework:spring-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.1'
	implementation 'org.springframework.security:spring-security-oauth2-jose:5.6.1'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'              //타임리프 레이아웃 사용 라이브러리

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	compileOnly 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	implementation 'com.mysql:mysql-connector-j'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//jackson
	implementation 'org.springframework.boot:spring-boot-starter-json:3.0.4'
	//implementation 'com.fasterxml.jackson.core:jackson-core:2.9.0'
	//implementation "com.fasterxml.jackson.core:jackson-annotations:2.9.0"
	//implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.0'

	//2023.03.23 modelmapper 라이브러리
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'
	
	//2023.03.25 QueryDSL 이거 사용해야함
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" 
	//메일 보내기 

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
	
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}