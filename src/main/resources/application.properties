#서버포트
server.port=9404
spring.application.name=funny
spring.profiles.include=oauth
# DevTools 활성화 
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false

# JPA ( JPA는 H2 DB와 연결 설정, 변경사항만 업데이트됨 )
spring.jpa.hibernate.ddl-auto=update

# JPA 메소드를 사용할 경우 JPA가 SQL 쿼리를 를 생성해서 DB에 저장 함. ( Oracle, MySQL, MSSQL...)
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true


#MySQL DB연결
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/funny?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234
spring.jpa.database=mysql

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace



#Thymeleaf cache 사용 중지
spring.thymeleaf.cache = false

##Kakao
#spring.security.oauth2.client.registration.kakao.client-id =f963aab0fa0e6863af1af07867ebce84
#spring.security.oauth2.client.registration.kakao.client-secret =Ka1gVvMMGJcdiv5vghslFvaCM2JS1zwg
#spring.security.oauth2.client.registration.kakao.scope =profile_nickname, account_email
#spring.security.oauth2.client.registration.kakao.client-name =Kakao
#spring.security.oauth2.client.registration.kakao.authorization-grant-type =authorization_code
#spring.security.oauth2.client.registration.kakao.redirect-uri =http://localhost:9404/oauth/kakao
#spring.security.oauth2.client.registration.kakao.client-authentication-method = POST
#
#spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize //인가허가 벋가 
#spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
#spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
#spring.security.oauth2.client.provider.kakao.user-name-attribute = id


#상품 이미지 업로드 경로


#상품 이미지 업로드 경로 (수정)
itemImgLocation=C:/funny/images/item
#리소스 업로드 경로
uploadPath=file:///C:/funny/
#프로필 이미지 업로드 경로
memberImgLocation=C:/funny/img/profile


#기본 batch size 설정
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

#이메일 보내기 설정 
mail.smtp.auth=true
mail.smtp.starttls.required=true
mail.smtp.starttls.enable=true
mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
mail.smtp.socketFactory.fallback=false
mail.smtp.port=465
mail.smtp.socketFactory.port=465
 
# admin 메일 구글 계정
AdminMail.id = pratt3343@gmail.com
AdminMail.password = tnqlxeqfkzlnmyya



#google
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9404/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.client-id=674318208994-bt8fcglpp0jl65vs3t0m5vo5mja5c01o.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

#naver
spring.security.oauth2.client.registration.naver.client-id=ikxRZSjYcZMz4t1SYUq6
spring.security.oauth2.client.registration.naver.client-secret=ZlUI44Ddif
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9404/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=profile,email
spring.security.oauth2.client.registration.naver.provider=naver
spring.security.oauth2.client.registration.naver.client-name=Naver

#naver provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
##google
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9404/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.client-name=Google
#spring.security.oauth2.client.registration.google.client-id=674318208994-bt8fcglpp0jl65vs3t0m5vo5mja5c01o.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.scope=profile,email
#
##naver
#spring.security.oauth2.client.registration.naver.client-id=ikxRZSjYcZMz4t1SYUq6
#spring.security.oauth2.client.registration.naver.client-secret=ZlUI44Ddif
#spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9404/login/oauth2/code/naver
#spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.naver.scope=profile,email
#spring.security.oauth2.client.registration.naver.provider=naver
#spring.security.oauth2.client.registration.naver.client-name=Naver
##naver provider
#spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
#spring.security.oauth2.client.provider.naver.user-name-attribute=response

